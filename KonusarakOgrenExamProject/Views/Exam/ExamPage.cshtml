@using KonusarakOgrenExamProject.Models
@model Exam

@{
    ViewData["Title"] = "Sınav";
}

@section styles{

    <style>
        a {
            cursor: pointer;
        }

        .question{
            margin-top:5vh
        }
        .question a{
            margin-top:1vh
        }
    </style>
}

<div style="margin-top: 10vh" class="exam mx-auto">
    @if (Model != null)
    {
        <div id="examMessage"></div>
        <input type="hidden" id="examId" value="@(Model.ExamId)" />
        <h1 style="text-align:center">@Model.Title</h1>
        <p style="text-align:center;margin-top:5vh;">@Model.Content</p>

        @for (int i = 0; i < Model.ExamQuestions.Count; i++)
        {
            <div class="row" style="margin-top:7vh;">
                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 question">
                    <h4><b>@(Model.ExamQuestions[i].QuestionNumber))</b> @Model.ExamQuestions[i].Question</h4>
                    <div id="listGroup@(Model.ExamQuestions[i].QuestionNumber)" class="list-group">
                        <a class="list-group-item list-group-item-action"
                           data-answer="A"
                           data-id="@(Model.ExamQuestions[i].QuestionNumber)"><b>A)</b>@Model.ExamQuestions[i].AnswerA</a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="B"
                           data-id="@(Model.ExamQuestions[i].QuestionNumber)"><b>B)</b>@Model.ExamQuestions[i].AnswerB</a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="C"
                           data-id="@(Model.ExamQuestions[i].QuestionNumber)">
                            <b>C)</b> @Model.ExamQuestions[i].AnswerC
                        </a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="D"
                           data-id="@(Model.ExamQuestions[i].QuestionNumber)">
                            <b>D)</b> @Model.ExamQuestions[i].AnswerD
                        </a>
                    </div>
                </div>

                <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 question">
                    <h4><b>@(Model.ExamQuestions[i + 1].QuestionNumber))</b> @Model.ExamQuestions[i + 1].Question</h4>
                    <div id="listGroup@(Model.ExamQuestions[i+1].QuestionNumber)" class="list-group">
                        <a class="list-group-item list-group-item-action"
                           data-answer="A"
                           data-id="@(Model.ExamQuestions[i+1].QuestionNumber)">
                            <b>A)</b> @Model.ExamQuestions[i + 1].AnswerA
                        </a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="B"
                           data-id="@(Model.ExamQuestions[i+1].QuestionNumber)">
                            <b>B)</b> @Model.ExamQuestions[i + 1].AnswerB
                        </a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="C"
                           data-id="@(Model.ExamQuestions[i+1].QuestionNumber)">
                            <b>C)</b> @Model.ExamQuestions[i + 1].AnswerC
                        </a>

                        <a class="list-group-item list-group-item-action"
                           data-answer="D"
                           data-id="@(Model.ExamQuestions[i+1].QuestionNumber)">
                            <b>D)</b> @Model.ExamQuestions[i + 1].AnswerD
                        </a>
                    </div>
                </div>
            </div>
            <input type="hidden" value="@(i++)" />
        }

        <div class="form-row">
            <div class="form-group col-md-4 mx-auto">
                <input type="button" class="btn btn-success col-12 btn-lg mx-auto" style="margin-top:5vh;" id="btnExamControl" value="Sınavı Tamamla" />
            </div>
        </div>
    }
</div>

@section scripts{

    <script>
        $('.list-group-item').click(function (e) {
            var baseId = "#" + $(this).parent().get(0).id + " a";
            $(baseId).removeClass('active');
            $(this).addClass('active');
        });

        $('#btnExamControl').click(function () {
            var answers = [];
             var isContinue = true;
            $('.exam .question .list-group').each(function (i) {
                var listId = "#" + $(this).attr('id') + " a";
                $(listId).each(function (i) {
                    if ($(this).hasClass('active')) {
                        var model = {
                            id : $(this).filter('.active').attr('data-id'),
                            answer : $(this).filter('.active').attr('data-answer')
                        };
                        answers.push(model);
                    }
                });
            });

               if (Object.keys(answers).length != 4)
                {
                   isContinue = false;
                }

            if (isContinue) {
                $('#loader').show();

                var _examId = $('#examId').val();
                $('#btnExamControl').prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("ExamAnswerControl", "Exam")',
                    type: 'POST',
                    contentType: 'application/x-www-form-urlencoded',
                    dataType: 'json',
                    data: { answerModels: answers, examId: _examId },
                    success: function (result) {
                        $('#loader').hide();

                        $('.exam .question .list-group').each(function (i) {
                            var listId = "#" + $(this).attr('id') + " a";

                            $(listId).each(function (i) {
                                if ($(this).hasClass('active')) {
                                    var answerLink = this;
                                    var id = $(this).filter('.active').attr('data-id');

                                    result.forEach(function (e, a) {
                                        if (e.id == id) {
                                            if (e.isCorrectAnswer) {
                                                $(answerLink).css("background-color", "green");
                                                $(answerLink).css("border-color", "green");
                                            }
                                            else
                                            {
                                                $(answerLink).css("background-color", "red");
                                                $(answerLink).css("border-color", "red");

                                                var answerGroup = answerLink.closest('div');

                                                for (var i = 0; i < 4; i++) {
                                                    if ($(answerGroup).children().get(i).attributes[1].nodeValue == e.correctAnswer) {
                                                        //var answer = $($(answerGroup).children().get(i)).attr("data-answer");
                                                        $($(answerGroup).children().get(i)).css("border-color", "green").css("background-color", "green").css("color", "white");
                                                    }
                                                }
                                            }
                                        }
                                    });
                                }
                            });
                        });

                        var count = 5;
                        var timer = setInterval(function () {
                            if (count < 0) {

                                if (count == -1) {
                                    Swal.fire({
                                    title: '',
                                    text: "Sınav listesine yönlendirme yapılsın mı?",
                                    icon: 'question',
                                    showCancelButton: true,
                                    cancelButtonText: "Hayır",
                                    confirmButtonColor: '#d33',
                                    cancelButtonColor: '#3085d6',
                                    confirmButtonText: 'Evet, Git!'
                                    }).then((result) => {
                                        if (result.value) {
                                            location.href = "/Exam/ExamPage";
                                        }
                                    });
                                }
                            }
                            else {
                                $('#examMessage').html('<div class="alert alert-warning alert-dismissible fade show" role="alert"> <strong>'+count+'</strong> saniye sonra yönlendirme yapılacak. <button type="button" class="close" data-dismiss="alert" aria-label="Close"> <span aria-hidden="true">&times;</span> </button> </div>');
                            }
                            count--;
                        }, 1000);
                    },
                    error: function (hata) {
                        $('#loader').hide();
                        alert('Beklenmeyen bir hata! Sayfayı yenileyip tekrar deneyiniz.');
                    }
                });
            }
            else {
                Swal.fire('Lütfen tüm soruları cevaplayınız.')
            }
        });
    </script>
}